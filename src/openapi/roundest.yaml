openapi: 3.0.3
info:
  title: roundest API
  description:
    A RESTful API for "The Roundest Pokémon" programming exercise. Only 1st Gen
    Pokémon
  version: 1.0.0
  contact:
    name: Pollito
    url: https://pollito.dev
servers:
  - url: "http://localhost:8080"
    description: dev
paths:
  /pokemons:
    get:
      tags:
        - Pokemon
      summary: List all Pokémon
      operationId: findAll
      parameters:
        - description:
            Pokémon filtering by checking if provided string is part of a name
            (all ignore case). If not used or empty, no filtering will be done
          in: query
          name: name
          schema:
            maxLength: 10
            type: string
        - description: Zero-based page index (0..N)
          in: query
          name: pageNumber
          schema:
            default: 0
            minimum: 0
            maximum: 2147483647
            type: integer
        - description: Size of the page to be returned
          in: query
          name: pageSize
          schema:
            default: 10
            maximum: 10
            minimum: 1
            type: integer
        - description: >
            Sorting criteria in the format `field:direction`. Specify multiple
            sort criteria by repeating the `sort` query parameter. For example:
            `?pageSort=votes:desc&pageSort=id:asc`
          explode: true
          in: query
          name: pageSort
          schema:
            default: [id:asc]
            items:
              type: string
            type: array
        - description:
            When this parameter is true, will bring (pageSize) random results,
            ignoring all other parameters except for pageSize
          in: query
          name: random
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: List of Pokémon
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pokemons"
          headers:
            X-Application-Name:
              $ref: '#/components/headers/X-Application-Name'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          headers:
            X-Application-Name:
              $ref: '#/components/headers/X-Application-Name'
  /pokemons/{id}:
    get:
      tags:
        - Pokemon
      summary: Get Pokémon by id
      operationId: findById
      parameters:
        - description: User identifier
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          description: A Pokémon
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pokemon"
          headers:
            X-Application-Name:
              $ref: '#/components/headers/X-Application-Name'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          headers:
            X-Application-Name:
              $ref: '#/components/headers/X-Application-Name'
    patch:
      tags:
        - Pokemon
      summary: Increment Pokémon's votes property by 1
      description:
        Increment Pokémon's votes property by 1. Pokémon is identified by id. No
        body is required. On success, status 204 with no body is returned
      operationId: incrementPokemonVotes
      parameters:
        - description: Pokémon id
          in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            maximum: 151
            type: integer
      responses:
        204:
          description: Pokémon vote count incremented +1 successfully
          headers:
            X-Application-Name:
              $ref: '#/components/headers/X-Application-Name'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          headers:
            X-Application-Name:
              $ref: '#/components/headers/X-Application-Name'
components:
  headers:
    X-Application-Name:
      description: The name of the application
      schema:
        type: string
  schemas:
    Error:
      properties:
        detail:
          description: Description of the problem
          example: No value present
          type: string
        instance:
          description: The endpoint where the problem was encountered
          example: "/generate"
          type: string
        status:
          description: http status code
          example: 500
          type: integer
        title:
          description: A short headline of the problem
          example: "NoSuchElementException"
          type: string
        timestamp:
          description: ISO 8601 Date
          example: "2024-01-04T15:30:00Z"
          type: string
        trace:
          description: opentelemetry TraceID, a unique identifier
          example: "0c6a41e22fe6478cc391908406ca9b8d"
          type: string
        type:
          description:
            used to point the client to documentation where it is explained
            clearly what happened and why
          example: "about:blank"
          type: string
      type: object
    Pageable:
      properties:
        pageNumber:
          description: Current page number (starts from 0)
          example: 0
          minimum: 0
          maximum: 2147483647
          type: integer
        pageSize:
          description: Number of items retrieved on this page
          example: 1
          minimum: 0
          maximum: 2147483647
          type: integer
      type: object
    PaginationResponse:
      properties:
        content:
          items: {}
          type: array
        pageable:
          $ref: "#/components/schemas/Pageable"
        totalElements:
          default: 0
          description: Total number of items that meet the criteria
          example: 10
          format: int64
          type: integer
      type: object
    Pokemon:
      properties:
        id:
          description: Pokémon id
          example: 1
          format: int64
          minimum: 1
          maximum: 151
          type: integer
        name:
          description: Pokémon name
          example: Bulbasaur
          maxLength: 10
          type: string
        spriteUrl:
          description: Pokémon sprite url
          example: https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/1.png
          maxLength: 255
          type: string
        votes:
          description: Pokémon current votes as "the roundest"
          example: 1
          minimum: 0
          maximum: 2147483647
          type: integer
      type: object
    Pokemons:
      allOf:
        - $ref: "#/components/schemas/PaginationResponse"
        - type: object
          properties:
            content:
              default: []
              items:
                $ref: "#/components/schemas/Pokemon"
              type: array
      type: object
